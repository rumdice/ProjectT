Date : 2021.07.23

1. AWS rds 생성
root 계정 정보 설정
툴 접속 허용을 위해 퍼블릭 접근 허용 3306 port
보안 그룹 3306 포트 확인하기


2. AWS ec2생성
인스턴스 생성시 pem파일을 만들 수 있음.
22 port 확인 후 터미널 접속


3.AWS Route53
AWS 에서 도메인 하나 구입


4. 리눅스 셋팅
셋팅 문서 참조


5. TS코드 완전 처음부터 작성하기 (vscode)
작업 폴더 vscode 열고 터미널에 
> npm init
> npm install -t typescript
package.json 파일 생성 됨

> tsc --init 
tsc.ps1 파일을 로드 할 수 없다 어쩌구 하면서 안되면

관리자 권한으로 파워쉘 키기
> Set=ExecutionPolicy RemoteSigned

다시 vscode 터미널에서 
> tsc --init (잘 됨)
tsconfig.json 파일 생성 됨


6. vscode 에서의 추가 설정
터미널 - 작업구성 메뉴 선택
tsc: 빌드 - tsconfig.json 선택
task.json 파일 생성 됨

F5 (단축키 셋팅이 visual studio로 되어있음)

vscode 옆에 텝에 벌레모양 (디버깅 메뉴 선택)
launch.json 파일 만들기
환경 선택에서 node.js 선택 (2개 있는데 위엣것 선택)

launch.json 파일이 생성 됨
이후 vscode 에서 F5나 ctrl-F5 할 경우 일일히 환경 선택 하지 않아도 바로 디버깅/실행 가능

자동으로 생성된 launch.json 파일에서 
"program": "${file}", 해당 부분만 이렇게 변경
디버그 할 파일 선택 후 F5


Date : 2021.07.26
오늘 한 것
1. express 사용 준비
> npm install @types/express


2. 필요 패키지 설치
> npm install @types/typescript

> npm install @types/mysql2 (없음)
> npm install mysql2

3. 현재 발견된 문제점
빌드시 커맨드 창에 tsc --build tsconfig.json 입력해줘야 빌드가 됨
F5 키로 빌드-> 디버깅을 한번에 하고 싶은데 어떻게 했더라?

> tsc --build tsconfig.json 
하면 ./out 경로에 js 코드가 생성됨

서버 실행
> node index.js

해당 코드를 실행하면 import 한 패키지에 따라 패키지가 없다고 나옴
ex) Cannot find moudle 'express'

방금 위에서  npm install @types/express로 설치 했는데 왜 안나오나.
js 로 생성된 코드(index.js)가 express를 불러오지 못 함.

> npm install express 


3.필요한 패키지 추가 설치 (페이지 랜더용)
> npm install pug
> npm install pug-bootstrap


4. AWS 인증서 발급 (ACM)
AWS에서 도메인을 발급 받았으면 인증서를 발급받자
ACM 메뉴에서 진행 가능
(CNAME)
 
하위 도메인에 대한 접근 경로 수정
AWS 로드 벨런스 설정 

5. 문제점 및 개선해야 할 점
개발 환경에서 디버깅이 불편함
서버 보안이 너무 허술 함
 

Date : 2021.07.31
오늘 한 것
vscode 에서의 타입 스크립트 디버깅/실행 환경 설정
(F5 키 눌러도 안되었었음)

> npm i ts-node
(이제 디버깅은 됨)
(이거 설치 안해도 ts파일 자체의 디버깅은 가능했음)
(import 구문이 있는 파일은 에러가 발생함)


Date : 2021.08.03
오늘 한 것
빌드 관련 정리 
- launch.json 파일 작성 완료

빌드 (따로 진행)
ctrl + shift + b (vs shotcut mapping 해서 단축키 똑같음)
- cmd 에서 커맨드로 tsc 한 효과
- 지정된 경로 ./out 폴더에 js파일과 디버깅에 필요한 .map파일이 생김

F5 키로 디버그 또는 ctrl + F5로 디버깅 하지 않고 실행
- import 구문에서 에러 발생하지 않음. 실행 및 디버그 확인

로깅에 필요한 패키지 설치
> npm i @types/winston
> npm i @types/winston-daily-rotate-file (없음. 에러)
> npm i winston-daily-rotate-file

admin 서버에서 더 해볼만한것
1. 프론트 부분은 반응형 페이지로 발전 시키기
2. vue.js 사용 해보기

Date : 2021.08.04
오늘 한 것
websocket 관련 패키지 설치
> npm i @types/ws
> npm i ws

redis 관련 패키지 설치
> npm i @types/redis
> npm i redis (js 디버깅 할때 에러 안나게?)

chat서버 기반 구축
game서버 기반 구축

내일 혹은 다음에 해야 할 것
패킷 테스터(http, ws)
부하 테스터


Date : 2021.08.05
오늘 한 것
https://github.com/MicrosoftArchive/redis/releases
개발 pc (윈도우)에 redis 설치

서버 (리눅스)에는 전에 설치 했었다. 
로컬 환경 테스트 목적으로 설치.

redis 환경 변수 경로 설정
Path 에 경로 추가
C:\Program Files\Redis (그냥 기본으로 설치 했을때의 redis 경로)

cmd
>redis-cli
redis 쓸 수 있게 뜨면 성공

패킷 테스터 초안 작성
game server
tester_game.ts (디버깅 확인)

chat server
별도 경로에 작성
https://github.com/rumdice/ProjectC/tree/main/CSharp/ChatTester


개선 사항 및 해야 할 것
게임, 채팅 서버 빌드 배포 스트립트 작성
테스터 유니티 클라 붙여보기
서버 머신에 jenkins 셋팅
대충 틀만 잡고 넘어간 부분 디테일 업 및 기능과 내용 추가
